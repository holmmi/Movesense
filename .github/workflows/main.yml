# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Android CI/CD pipeline

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'

jobs:
  build:
    name: Build
    environment: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Create configuration
      run: echo '${{ secrets.LOCAL_PROPERTIES }}' > local.properties
    - name: Build
      run: bash ./gradlew build

  apk:
    name: Create APK
    environment: test
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Create configuration
      run: echo '${{ secrets.LOCAL_PROPERTIES }}' > local.properties
    - name: Build APK
      run: bash ./gradlew assembleDebug
    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: apk
        path: app/build/outputs/apk/debug/app-debug.apk

  release:
    name: Release APK
    needs: apk
    runs-on: ubuntu-latest
    steps:
      - name: Download APK from artifacts
        uses: actions/download-artifact@v3
        with:
          name: apk
          path: apk
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
      - name: Upload release APK
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: apk/app-debug.apk
          asset_name: Movesense.apk
          asset_content_type: application/zip
          overwrite: true